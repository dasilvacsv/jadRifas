// src/lib/tracking.ts

// --- Declaraciones Globales para TypeScript ---
declare global {
Â  interface Window {
Â  Â  fbq: (...args: any[]) => void;
Â  Â  sa_event: (eventName: string) => void;
Â  }
}

// --- Eventos de Meta Pixel ---

// --- MODIFICADO: Ahora acepta parÃ¡metros opcionales ---
interface LeadParams {
  content_name?: string;
}

/**
Â * Dispara el evento estÃ¡ndar "Lead" de Meta.
Â * @param {LeadParams} params - ParÃ¡metros adicionales para el evento.
Â */
export const trackLead = (params?: LeadParams) => {
Â  if (typeof window.fbq === 'function') {
Â  Â  window.fbq('track', 'Lead', params || {});
Â  Â  console.log("ðŸ”¥ Meta Pixel Event: Lead", params || {});
Â  }
};

// --- MODIFICADO: Ahora acepta content_name y otros parÃ¡metros ---
interface PurchaseParams {
  value: number;
  currency: string;
  num_items: number;
  content_name?: string;
}

/**
Â * Dispara el evento estÃ¡ndar "Purchase" (Compra) de Meta.
Â * @param {PurchaseParams} params - Datos del evento de compra.
Â */
export const trackPurchase = (params: PurchaseParams) => {
Â  if (typeof window.fbq === 'function') {
Â  Â  window.fbq('track', 'Purchase', params);
Â  Â  console.log("âœ… Meta Pixel Event: Purchase", params);
Â  }
};

// --- Eventos de Simple Analytics ---

/**
Â * Dispara un evento personalizado para Simple Analytics.
Â * @param {string} eventName - El nombre del evento (ej. 'select_tickets').
Â */
export const trackSimpleAnalyticsEvent = (eventName: string) => {
Â  if (typeof window.sa_event === 'function') {
Â  Â  window.sa_event(eventName);
Â  Â  console.log(`ðŸ“ˆ Simple Analytics Event: ${eventName}`);
Â  }
};